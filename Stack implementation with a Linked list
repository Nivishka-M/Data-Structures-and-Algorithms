#include <iostream>
#include <chrono>
using namespace std::chrono;
using namespace std;

struct Node {
   int data;
   struct Node * link;
};

struct stack{
    Node *head =NULL;
    Node *tail =NULL;

    int len =0;

    void push(int data){
        Node *temp = new Node;
        temp->data = data;
        temp->link = NULL;
        if (head == NULL){
            head = temp;
            tail = temp;
        }
        else{
            tail->link = temp;
            tail = temp;
        }
        len++;
    }

    int pop(){
        if (tail == NULL){
            cout << "Error: Stack underflow" << endl;
            return -1; 
        }
        int data = tail->data;
        Node *temp = head;
        if (head == tail){
            head = NULL;
            tail = NULL;
        }
        else{
            while (temp->link != tail){
                temp = temp->link;
            }
            tail = temp;
            temp = tail->link;
            tail->link = NULL;
        }
        delete temp;
        len=len-1;
        return data;
    }

    void display(){
        Node *temp = head;
        cout << "Current Stack: ";
        while(temp != NULL){
            cout << temp->data << " ";
            temp = temp->link;
        }
        cout << endl;
    }
};

int main(){
    stack stack1;
    auto start1 = high_resolution_clock::now();
    stack1.push(8);
    stack1.push(10);
    stack1.push(5);
    stack1.push(11);
    stack1.push(15);
    stack1.push(23);
    stack1.push(6);
    stack1.push(18);
    stack1.push(20);
    stack1.push(17);
    stack1.display(); 

    cout << stack1.pop() << endl; 
    cout << stack1.pop() << endl; 
    cout << stack1.pop() << endl;
    cout << stack1.pop() << endl; 
    cout << stack1.pop() << endl;

    stack1.display(); 
    stack1.push(4);
    stack1.push(30);
    stack1.push(3);
    stack1.push(1);

    stack1.display();

    auto stop1 = high_resolution_clock::now();
    auto duration1 = duration_cast<microseconds>(stop1-start1);
    cout<<"Running Time : "<<duration1.count()<<" micro sec"<<endl;
}

