#include <iostream>
#include <chrono>
using namespace std::chrono;
using namespace std;

int stack[100], n=100, top=-1;

void push(int stack[],int x){

    if (top<0){
        top = 0;
        stack[top] = x;
        return;
    }
    top = top +1;
    if (top>=n){
        cout<<"Error : Stack overflow"<<endl;
        }
    else
        stack[top] = x;
}

void pop(int stack[]){
    if (top<0){
        cout<<"Error : Stack underflow"<<endl;
    }
    else{
        top = top-1;
        //cout<< "popped"<<stack[top+1]<< endl; 
    }
}

void display(int stack[]) {
    if (top < 0) {
        cout << "Error: Stack is empty" << endl;
        return;
    }
    cout << "Stack: ";
    for (int i = top; i >= 0; i--) {
        cout << stack[i] << " ";
    }
    cout << endl;
}


int main(){
    cout<< "Enter the stack size : ";
    cin >> n;   //check for n=1
    auto start = high_resolution_clock::now();
    push(stack,8);
    push(stack,10);
    push(stack,5);
    push(stack,11);
    push(stack,15);
    push(stack,23);
    push(stack,6);
    push(stack,18);
    push(stack,20);
    push(stack,17);
    display(stack);

    pop(stack);
    pop(stack);
    pop(stack);
    pop(stack);
    pop(stack);

    display(stack);
    push(stack,4);
    push(stack,30);
    push(stack,3);
    push(stack,1);

    display(stack);

    auto stop = high_resolution_clock::now();
    auto duration = duration_cast<microseconds>(stop-start);
    cout<<"Running Time : "<<duration.count()<<" micro sec"<<endl;
}
